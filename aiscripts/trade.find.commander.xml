<?xml version="1.0" encoding="utf-8" ?>

<!-- Various code modifications to improve trader logic; more details please see README. -->

<diff>
    <!-- SECTION START Faster Trade Matching -->

    <!-- Station export wares: wait faster! -->
    <!-- Iterate per-ware, then per-space -->
    <replace sel="/aiscript[@name='trade.find.commander']/attention/actions/do_if[@value='$selloffers.count gt 0']/do_all[@exact='$selloffers.count']/do_all/wait">
        <!-- Reduce per-space waiting time -->
        <!-- original has min=1,max=3,since=2 -->
        <wait min="500ms" max="1.5s" sinceversion="2" />
    </replace>
    <replace sel="/aiscript[@name='trade.find.commander']/attention/actions/do_if[@value='$selloffers.count gt 0']/do_all[@exact='$selloffers.count']/wait">
        <!-- Reduce per-ware waiting time -->
        <!-- original has min=1,max=3,since=2 -->
        <wait min="500ms" max="1.5s" sinceversion="2" />
    </replace>

    <!-- Station import wares; wait faster! -->
    <!-- Iterate per-ware, then per-space -->
    <replace sel="/aiscript[@name='trade.find.commander']/attention/actions/do_if[@value='$buyoffers.count gt 0']/do_all[@exact='$buyoffers.count']/do_all[@exact='$buyspaces.count']/wait">
        <!-- Reduce per-space waiting time -->
        <!-- original has min=0.5,max=4,since=9 -->
        <wait min="250ms" max="2s" sinceversion="9" />
    </replace>
    <replace sel="/aiscript[@name='trade.find.commander']/attention/actions/do_if[@value='$buyoffers.count gt 0']/do_all[@exact='$buyoffers.count']/wait">
        <!-- Reduce per-ware waiting time -->
        <!-- original has min=4,max=10,since=9 -->
        <wait min="1.5s" max="4.5s" sinceversion="9" />
    </replace>

    <!-- SECTION END Faster Trade Matching -->

    <!-- SECTION START Counter Trend Trading -->

    <!-- Divert some traders to try counter-trend trading, which means the following: -->
    <!-- If the trend is to export wares (default state), then counter it by doing import first. -->
    <!-- If the trend is to handle shortages ("shortage" state), then counter it by sticking to regular exporting. -->
    <!-- This happens only once per trade search. -->

    <!-- Default state: try importing first -->
    <add sel="/aiscript[@name='trade.find.commander']/attention/actions/label[@name='sell']" pos="before">
        <do_if value="(not $doneCounterTrend?) and (not $hasDivertedImporting?)" chance="20" comment="Check whether we have done this before and may trigger">
            <!-- Haven't done counter-trend before; small chance to do counter-trend -->
            <!-- Jump to ware imports -->
            <set_value name="$doneCounterTrend" />
            <set_value name="$hasDivertedImporting" exact="true" comment="Set and raise the flag" />
            <resume label="buy" />
        </do_if>
    </add>
    <add sel="/aiscript[@name='trade.find.commander']/attention/actions/do_if[@value='$usedshortage?']" pos="after">
        <!-- This is after the import script finished checking for trades (including "shortage trading"), but no trade found. -->
        <!-- The script then declares "no trade found". -->
        <do_if value="@$hasDivertedImporting">
            <!-- Actually, we did not try exporting. Let's get back to there! -->
            <set_value name="$hasDivertedImporting" exact="false" comment="Lower the flag but still keep it to prevent inf-loop" />
            <set_value name="$jumpSleep" comment="Simple flag to indicate next code section should be 'sleep'" />
            <resume label="start" />
        </do_if>
        <!-- Create a convenient label here because we will need it later. -->
        <label name="sleep" />
    </add>
    <add sel="/aiscript[@name='trade.find.commander']/attention/actions/label[@name='buy']" pos="before">
        <do_if value="$jumpSleep?">
            <!-- We diverted to importing, then returned to exporting, and then we are still here. -->
            <!-- This means "no trades found"; go to sleep!-->
            <remove_value name="$jumpSleep" />
            <resume label="sleep" />
        </do_if>
    </add>

    <!-- Shortage state: try exporting first, to keep the cash flowing -->
    <add sel="/aiscript[@name='trade.find.commander']/attention/actions/do_if[@value='not $skipshortage?']">
        <do_if value="(not $doneCounterTrend?) and ($resources_shortage.count or $resources_critical.count)" chance="20" comment="Check whether we have done this before and may trigger">
            <!-- Haven't done counter-trend before; small chance to do counter-trend -->
            <!-- Don't handle shortages -->
            <set_value name="$doneCounterTrend" />
            <set_value name="$resources_shortage" exact="[]" />
            <set_value name="$resources_critical" exact="[]" />
            <set_value name="$skipshortage" comment="Conveniently set the flag to prevent shortage handling" />
        </do_if>
    </add>

    <!-- SECTION END Counter Trend Trading -->

    <!-- SECTION START Full Load Delivery -->

    <!-- Make mid-large traders dislike trade deals that does not use the full cargo limit. -->
    <!-- This has a tiebreaking power between a juicy but small deal vs a bland but large deal: -->
    <!-- Prefer the large one, it keep things going. -->

    <add sel="/aiscript[@name='trade.find.commander']/attention/actions/do_if[@value='$selloffers.count gt 0']/do_all/do_all/do_for_each/do_if[2]" pos="before">
        <!-- Station is exporting wares -->
        <!-- This should be right after setting the tradevalue but before any checking can begin -->
        <set_value name="$tradeAmount" exact="[$buyoffer_local.offeramount.{this.assignedcontrolled}, this.assignedcontrolled.cargo.{$buyoffer_local.ware}.free].min" />
        <set_value name="$maxCarryAmount" exact="this.assignedcontrolled.cargo.{$buyoffer_local.ware}.max" />
        <!-- maxCarryAmount shows the max that can be loaded onto a ship; if tradeAmount = maxCarryAmount then we have a full load, and it is good. -->
        <do_if value="$maxCarryAmount gt 0" comment="$maxCarryAmount can be 0 if ship is considering impossible cargo; e.g. container ship considering ores">
            <do_if value="not this.ship.isclass.[class.ship_xs, class.ship_s]" comment="Small ships don't need full loads">
                <set_value name="$loctradevalue" exact="$loctradevalue * ($tradeAmount * 1.0 / $maxCarryAmount)" comment="Discourage non-full-load trades" />
            </do_if>
        </do_if>
        <remove_value name="$tradeAmount" comment="Out-of-scope variable removal" />
        <remove_value name="$maxCarryAmount" comment="Out-of-scope variable removal" />
    </add>

    <add sel="/aiscript[@name='trade.find.commander']/attention/actions/do_if[@value='$buyoffers.count gt 0']/do_all/do_all/do_for_each/do_if[2]" pos="before">
        <!-- Station is importing wares -->
        <!-- This should be right after setting the tradevalue but before any checking can begin -->
        <set_value name="$tradeAmount" exact="[$selloffer_local.offeramount.{this.assignedcontrolled}, this.assignedcontrolled.cargo.{$selloffer_local.ware}.free].min" />
        <set_value name="$maxCarryAmount" exact="this.assignedcontrolled.cargo.{$selloffer_local.ware}.max" />
        <!-- maxCarryAmount shows the max that can be loaded onto a ship; if tradeAmount = maxCarryAmount then we have a full load, and it is good. -->
        <do_if value="$maxCarryAmount gt 0" comment="$maxCarryAmount can be 0 if ship is considering impossible cargo; e.g. container ship considering ores">
            <do_if value="not this.ship.isclass.[class.ship_xs, class.ship_s]" comment="Small ships don't need full loads">
                <set_value name="$loctradevalue" exact="$loctradevalue * ($tradeAmount * 1.0 / $maxCarryAmount)" comment="Discourage non-full-load trades" />
            </do_if>
        </do_if>
        <remove_value name="$tradeAmount" comment="Out-of-scope variable removal" />
        <remove_value name="$maxCarryAmount" comment="Out-of-scope variable removal" />
    </add>

    <!-- SECTION END Full Load Delivery -->

    <!-- SECTION START Patient Opportunists -->

    <!-- Make all traders have a random chance to belay greedy-picking trade deals, allowing potentially better deals to be found next sector. -->
    <!-- Use trade/access restrictions to limit the traders! -->

    <add sel="/aiscript[@name='trade.find.commander']/attention/actions/label[@name='start']" pos="after">
        <!-- Determine opportunist parameters -->
        <!-- Key: try to look at the default behavior of the ship, to extract the existing trade range (in sectors) -->
        <set_value name="$shipDefaultOrder" exact="this.ship.defaultorder" />
        <set_value name="$maxTradeRange" exact="0" />
        <do_if value="$shipDefaultOrder.id == 'TradeRoutine' or $shipDefaultOrder.id == 'TradeRoutine_Advanced'">
            <!-- The max-buy and max-sell should be the same... pick the largest one regardless -->
            <set_value name="$maxTradeRange" exact="[$shipDefaultOrder.$maxbuy, $shipDefaultOrder.$maxsell].max" />
        </do_if>

        <!-- Then, determine the "additional sectors to check" -->
        <!-- This is dependent on the ship class and the trade range -->
        <set_value name="$opportunistRange" exact="0" />
        <set_value name="$opportunistChance" exact="0" />
        <do_if value="this.ship.isclass.[class.ship_s, class.ship_m]" comment="Light ships are more suitable to go far">
            <set_value name="$opportunistRange" exact="[$maxTradeRange, 5].min" />
        </do_if>
        <do_else comment="Heavy ships are less suitable to go far">
            <set_value name="$opportunistRange" exact="(([$maxTradeRange, 5].min) + 1) / 2" comment="012345 becomes 011223" />
        </do_else>
        <set_value name="$oppChanceList" exact="[0, 10, 20, 28, 35, 40]" />
        <do_if value="this.ship.isclass.[class.ship_s]" comment="S ships are usually unwilling to go far">
            <set_value name="$oppChanceList" exact="[0, 5, 10, 14, 17, 20]" />
        </do_if>
        <set_value name="$oppChanceLookupIndex" exact="[$maxTradeRange, 5].min + 1" comment="MD lists index start at 1" />
        <set_value name="$opportunistChance" exact="$oppChanceList.{$oppChanceLookupIndex}" />

        <!-- Clean up! -->
        <remove_value name="$oppChanceList" />
        <remove_value name="$oppChanceLookupIndex" />
    </add>

    <!-- SECTION END Patient Opportunists -->
</diff>
